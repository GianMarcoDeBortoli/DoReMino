{"version":3,"sources":["modules/sound.js","rules.js"],"names":["synth","Tone","Synth","toDestination","poly","PolySynth","pluck","PluckSynth","membrane","MembraneSynth","metal","MetalSynth","volume","value","searchForNote","playChordsOnHeader","index","triggerAttackRelease","playNoteOnHeader","playPluck","playMembrane","errorSound","changeSetSound","interval","setInterval","setTimeout","clearInterval","play_melody","result","time","now","i","length","grade","indexOf","note","backToModeSelectionButton","document","getElementById","redirectToModeSelection","location","replace","addEventListener","goToDemo","redirectToDemo"],"mappings":";AA6DC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,aAAA,EAAA,QAAA,WAAA,EAAA,QAAA,eAAA,EAAA,QAAA,YAAA,EAAA,QAAA,cAAA,QAAA,WAAA,EA1DM,MAAMA,GAAQ,IAAIC,KAAKC,OAAQC,gBA0DrC,QAAA,MAAA,EAzDD,MAAMC,GAAO,IAAIH,KAAKI,WAAYF,gBAC5BG,GAAQ,IAAIL,KAAKM,YAAaJ,gBAC9BK,GAAW,IAAIP,KAAKQ,eAAgBN,gBACpCO,GAAQ,IAAIT,KAAKU,YAAaR,gBAGpCG,EAAMM,OAAOC,OAAS,GACtBL,EAASI,OAAOC,OAAS,GACzBH,EAAME,OAAOC,OAAS,GAGf,MAAMC,EAAgB,CAAC,EAAE,GAAI,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,IACrD,CAAC,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,OAIrI,SAASC,EAAmBC,GAClB,GAATA,EAAYZ,EAAKa,qBAAqB,CAAC,KAAM,MAAO,MACtC,GAATD,EAAYZ,EAAKa,qBAAqB,CAAC,KAAM,MAAO,MAC3C,GAATD,EAAYZ,EAAKa,qBAAqB,CAAC,KAAM,KAAM,MAAO,MACjD,GAATD,GAAYhB,EAAMiB,qBAAqB,KAAM,MAGnD,SAASC,EAAiBF,GAChB,GAATA,EAAYhB,EAAMiB,qBAAqB,KAAM,MAC/B,GAATD,EAAYhB,EAAMiB,qBAAqB,KAAM,MACpC,GAATD,GAAYhB,EAAMiB,qBAAqB,KAAM,MAGnD,SAASE,IACZb,EAAMW,qBAAqB,KAAM,OAG9B,SAASG,IACZZ,EAASS,qBAAqB,KAAM,OAGjC,SAASI,IACZX,EAAMO,qBAAqB,KAAM,OAG9B,SAASK,IACRC,IAAAA,EAAWC,YAAY,WAAalB,EAAMW,qBAAqB,KAAM,QAAS,IAClFQ,WAAW,WAAaC,cAAcH,IAAY,KAI/C,SAASI,EAAYC,GACtBC,IAAAA,EAAO,EACLC,MAAAA,EAAM7B,KAAK6B,MACT,IAAA,IAAIC,EAAE,EAAIA,EAAEH,EAAOI,OAAQD,IAAI,CAC3BE,IAAAA,EAAQL,EAAOG,GACff,EAAQF,EAAc,GAAGoB,QAAQD,GACjCE,EAAOrB,EAAc,GAAGE,GAC5BhB,EAAMiB,qBAAqBkB,EAAM,KAAML,EAAMD,GAC7CA,GAAQ,IAEjB,QAAA,cAAA;;AC1CA,aAnBD,IAAA,EAAA,QAAA,mBAIA,MAAMO,EAA4BC,SAASC,eAAe,6BAG1D,SAASC,KACL,EAAA,EAAA,gBACAd,WAAW,WAAYe,SAASC,QAAQ,uBAAwB,KAJpEL,EAA0BM,iBAAiB,QAASH,GAQpD,MAAMI,EAAWN,SAASC,eAAe,YAGzC,SAASM,KACL,EAAA,EAAA,gBACAnB,WAAW,WAAYe,SAASC,QAAQ,mBAAoB,KAJhEE,EAASD,iBAAiB,QAASE","file":"rules.1a54206a.js","sourceRoot":"..","sourcesContent":["/* ************************************************** MODEL **************************************************** */\r\n\r\n/* creation of synths with tone.js */\r\nexport const synth = new Tone.Synth().toDestination();\r\nconst poly = new Tone.PolySynth().toDestination();\r\nconst pluck = new Tone.PluckSynth().toDestination();\r\nconst membrane = new Tone.MembraneSynth().toDestination();\r\nconst metal = new Tone.MetalSynth().toDestination();\r\n\r\n/* regulation of volumes */\r\npluck.volume.value = -12;\r\nmembrane.volume.value = -12;\r\nmetal.volume.value = -12;\r\n\r\n/* dictionary used to get the correct note from of the grade */\r\nexport const searchForNote = [[-6, -5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12],\r\n                       [\"F#3\", \"G3\", \"G#3\", \"A3\", \"A#3\", \"B3\", \"C4\", \"C#4\", \"D4\", \"D#4\", \"E4\", \"F4\", \"F#4\", \"G4\", \"G#4\", \"A4\", \"A#4\", \"B4\", \"C5\"]];\r\n\r\n\r\n/* functions that creates the ambient sounds */\r\nexport function playChordsOnHeader(index) {\r\n    if (index == 0) poly.triggerAttackRelease([\"C4\", \"G4\"], \"8n\");\r\n    else if (index == 1) poly.triggerAttackRelease([\"D4\", \"F4\"], \"8n\");\r\n    else if (index == 2) poly.triggerAttackRelease([\"B3\", \"E4\", \"G4\"], \"8n\");\r\n    else if (index == 3) synth.triggerAttackRelease(\"C4\", \"4n\");\r\n}\r\n\r\nexport function playNoteOnHeader(index) {\r\n    if (index == 0) synth.triggerAttackRelease(\"C4\", \"8n\");\r\n    else if (index == 1) synth.triggerAttackRelease(\"D4\", \"8n\");\r\n    else if (index == 2) synth.triggerAttackRelease(\"E4\", \"8n\");\r\n}\r\n\r\nexport function playPluck() {\r\n    pluck.triggerAttackRelease(\"C5\", \"16n\");\r\n}\r\n\r\nexport function playMembrane() {\r\n    membrane.triggerAttackRelease(\"C4\", \"16n\");\r\n}\r\n\r\nexport function errorSound() {\r\n    metal.triggerAttackRelease(\"C5\", \"32n\");\r\n}\r\n\r\nexport function changeSetSound() {\r\n    let interval = setInterval(function () {pluck.triggerAttackRelease(\"C6\", \"32n\")}, 40);\r\n    setTimeout(function () {clearInterval(interval)}, 300);\r\n}\r\n\r\n/* function that plays back the melody built inside the game */\r\nexport function play_melody(result){\r\n  let time = 0;\r\n  const now = Tone.now()\r\n      for(let i=0 ; i<result.length; i++){\r\n          let grade = result[i];\r\n          let index = searchForNote[0].indexOf(grade);\r\n          let note = searchForNote[1][index];\r\n          synth.triggerAttackRelease(note, \"8n\", now + time);\r\n          time += 0.5;\r\n      }\r\n}\r\n","import {playMembrane} from \"./modules/sound\";\r\n\r\n\r\n/* redirecting to mode selction when clicking the button */\r\nconst backToModeSelectionButton = document.getElementById(\"backToModeSelectionButton\");\r\nbackToModeSelectionButton.addEventListener(\"click\", redirectToModeSelection);\r\n\r\nfunction redirectToModeSelection() {\r\n    playMembrane();\r\n    setTimeout(function() {location.replace(\"modeSelection.html\")}, 700);\r\n}\r\n\r\n/* redirecting to the demo of the game when clicking the button */\r\nconst goToDemo = document.getElementById(\"goToDemo\");\r\ngoToDemo.addEventListener(\"click\", redirectToDemo);\r\n\r\nfunction redirectToDemo() {\r\n    playMembrane();\r\n    setTimeout(function() {location.replace(\"videoDemo.html\")}, 700);\r\n}\r\n"]}