{"version":3,"sources":["score.js"],"names":["window","onbeforeunload","synth","Tone","Synth","toDestination","searchForNote","parseGetVars","res","params","URLSearchParams","document","location","search","substring","result","get","console","log","split","play_melody","time","now","i","length","grade","index","indexOf","note","triggerAttackRelease","playMelody","onclick"],"mappings":"AAAAA,MAAM,CAACC,cAAP,GAAwB,YAAW;AAC/B,SAAO,iCAAP;AACH,CAFD;;AAIA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACC,KAAT,GAAiBC,aAAjB,EAAd,EAEA;;AACA,MAAMC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAF,EAAI,CAAC,CAAL,EAAO,CAAC,CAAR,EAAU,CAAC,CAAX,EAAa,CAAC,CAAd,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,CAA9B,EAAgC,CAAhC,EAAkC,CAAlC,EAAoC,EAApC,EAAuC,EAAvC,EAA0C,EAA1C,CAAD,EACC,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,KAAvC,EAA8C,IAA9C,EAAoD,KAApD,EAA2D,IAA3D,EAAiE,IAAjE,EAAuE,KAAvE,EAA8E,IAA9E,EAAoF,KAApF,EAA2F,IAA3F,EAAiG,KAAjG,EAAwG,IAAxG,EAA8G,IAA9G,CADD,CAAtB,EAEA;AACA;AACA;;AACA,SAASC,YAAT,GAAwB;AACtB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,QAAQ,CAACC,QAAT,CAAkBC,MAAlB,CAAyBC,SAAzB,CAAmC,CAAnC,CAApB,CAAb;AACA,MAAIC,MAAM,GAAGN,MAAM,CAACO,GAAP,CAAW,QAAX,CAAb;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,MAAT;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACA,SAAOA,GAAP;AACD;;AACD,IAAIC,MAAM,GAAGF,YAAY,EAAzB;AACAU,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,IAAIM,MAAM,GAAGN,MAAM,CAAC,CAAD,CAAN,CAAUU,KAAV,CAAgB,GAAhB,CAAb,EAAmC;;AACnCF,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAEA,SAASK,WAAT,GAAsB;AACpB,MAAIC,IAAI,GAAG,CAAX;AACA,QAAMC,GAAG,GAAGnB,IAAI,CAACmB,GAAL,EAAZ;;AACI,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAACR,MAAM,CAACS,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,QAAIE,KAAK,GAAGV,MAAM,CAACQ,CAAD,CAAlB;AACA,QAAIG,KAAK,GAAGpB,aAAa,CAAC,CAAD,CAAb,CAAiBqB,OAAjB,CAAyBF,KAAzB,CAAZ;AACA,QAAIG,IAAI,GAAGtB,aAAa,CAAC,CAAD,CAAb,CAAiBoB,KAAjB,CAAX;AACAxB,IAAAA,KAAK,CAAC2B,oBAAN,CAA2BD,IAA3B,EAAiC,IAAjC,EAAuCN,GAAG,GAAGD,IAA7C;AACAA,IAAAA,IAAI,IAAI,GAAR;AACH;AACN;;AAEDS,UAAU,CAACC,OAAX,GAAqBX,WAArB","file":"score.1b071aaf.js","sourceRoot":"..","sourcesContent":["window.onbeforeunload = function() {\n    return \"Are you sure you want to leave?\";\n}\n\nconst synth = new Tone.Synth().toDestination();\n\n// matrix needed for the selection of the correct note based on the color of the half-tile\nconst searchForNote = [[-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12],\n                       [\"G3\", \"G#3\", \"A3\", \"A#3\", \"B3\", \"C4\", \"C#4\", \"D4\", \"D#4\", \"E4\", \"F4\", \"F#4\", \"G4\", \"G#4\", \"A4\", \"A#4\", \"B4\", \"C5\"]];\n// function to get parameters from URL\n// URLSearchParams crea una sorta di dizionario dalla stringa data in argomento, la stringa data Ã¨ la parte dell'URL che sta dopo l'uguale\n// per accedere ai valori del dizionario si usa la get(key)\nfunction parseGetVars() {\n  let res = [];\n  let params = new URLSearchParams(document.location.search.substring(1));\n  let result = params.get(\"result\");\n  res[0] = result;\n  console.log(res);\n  return res;\n}\nvar params = parseGetVars();\nconsole.log(params);\nvar result = params[0].split(\"_\"); // in this way I have again an array with all the grades\nconsole.log(result);\n\nfunction play_melody(){\n  let time = 0;\n  const now = Tone.now()\n      for(let i=0 ; i<result.length; i++){\n          let grade = result[i];\n          let index = searchForNote[0].indexOf(grade);\n          let note = searchForNote[1][index];\n          synth.triggerAttackRelease(note, \"8n\", now + time);\n          time += 0.5;\n      }\n}\n\nplayMelody.onclick = play_melody;\n"]}